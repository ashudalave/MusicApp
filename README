
Note: to run this project on development system with HSQLDB (easiest way):
1. Start the HSQLDB server as explained in JdbcCheckup.java or use
   "ant start-hsqldb" after cd'ing to the database directory here.
   
2. Again in the database directory, use "ant load-hsqldb" to load the hsqldb DB
  (or "ant drop-hsqldb" followed by "ant load-hsqldb" if it's running)
   
3. Use "ant hsqlSysTest" to run SystemTest on HSQLDB
 
 To run this project as a web app with HSQLDB
 1. Make sure the HSQLDB server is started (step 1 above) and loaded (step 2 above)
 
 2.  Start or restart tomcat (it needs to have hsqldb running at its startup) and CATALINA_HOME and TOMCAT_URL are defined as environment variables
 
 3. In this directory use "ant deploy-hsqldb" to copy the WebContent area to tomcat's
    webapps area. Check this by cd'ing to %CATALINA_HOME%/webapps (or $CATALINA_HOME/webapps
    on Mac or Linux) and listing the files. This command puts "hsql" in the dbName file in
    WebContents, and this file is copied to the top-level deployed directory.
 
 4. After a minute, use "ant webSysTest" to run SystemTest inside tomcat's JVM
 
 5. Also try "ant webTest1" and browse to http://localhost:8080/music3/
 
To use a real DB: you need to define environment variables as discussed in build.xml
 For Oracle database, set up env variables ORACLE_USER, ORACLE_PW, ORACLE_SITE, etc.
 You also need to edit tomcat's conf/context.xml as described in 
 $cs636/UsingDBfromWebApp.html. And set up tunnels through the University firewalls.
 Be sure to get your tunnels working before starting tomcat.


  